<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.control.DialogPane?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.DatePicker?>
<DialogPane fx:controller="com.aditcrey.todoList.DialogController"
            xmlns:fx="http://javafx.com/fxml"
            style="-fx-background-color : #deb887">
    <headerText>
        We could put instructions here.
    </headerText>
    <content >
        <GridPane vgap="10" hgap="10">
            <Label text="Short Desciption: " GridPane.rowIndex="0" GridPane.columnIndex="0"/>
            <TextField fx:id="shortDescriptionField" GridPane.rowIndex="0" GridPane.columnIndex="1"/>
            <Label text="Details: " GridPane.rowIndex="1" GridPane.columnIndex="0"/>
            <TextArea fx:id="detailsArea" GridPane.rowIndex="1" GridPane.columnIndex="1" wrapText="true"/>
            <Label text="Deadline" GridPane.rowIndex="2" GridPane.columnIndex="0"/>
            <DatePicker fx:id="deadlinePicker" GridPane.rowIndex="2" GridPane.columnIndex="1"/>

        </GridPane>
    </content>

</DialogPane>

<!--every dialog is wrapped in dialogPane-->
<!--DialogPane is the layoutManager which allow us to set 4 properties namely: header, grphic, content and
buttons...each property expects a control...we also have properties like header-text and content-text for
diplaying text in the header and the content area...it saves us from creating any label
Note: if both text and non-text properties are set then non-text property will take precedence
more info on dialog pane : https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/DialogPane.html-->
<!--Dialog pane is supported after java8u40-->